diff -ur minisat/minisat/core/Dimacs.h minisat/minisat/core/Dimacs.h
--- minisat/minisat/core/Dimacs.h	2012-11-19 05:50:09.000000000 -0800
+++ minisat/minisat/core/Dimacs.h	2013-08-13 08:38:55.857476564 -0700
@@ -32,46 +32,50 @@
 // DIMACS Parser:
 
 template<class B, class Solver>
-static void readClause(B& in, Solver& S, vec<Lit>& lits) {
+static bool readClause(B& in, Solver& S, vec<Lit>& lits) {
     int     parsed_lit, var;
+    bool    error = false;
     lits.clear();
     for (;;){
-        parsed_lit = parseInt(in);
-        if (parsed_lit == 0) break;
+        parsed_lit = parseInt(in, error);
+        if (parsed_lit == 0 || error) break;
         var = abs(parsed_lit)-1;
         while (var >= S.nVars()) S.newVar();
         lits.push( (parsed_lit > 0) ? mkLit(var) : ~mkLit(var) );
     }
+    return !error;
 }
 
 template<class B, class Solver>
-static void parse_DIMACS_main(B& in, Solver& S, bool strictp = false) {
+static bool parse_DIMACS_main(B& in, Solver& S, bool strictp = false) {
     vec<Lit> lits;
     int vars    = 0;
     int clauses = 0;
     int cnt     = 0;
+    bool error  = false;
     for (;;){
         skipWhitespace(in);
-        if (*in == EOF) break;
+        if (*in == EOF || error) break;
         else if (*in == 'p'){
             if (eagerMatch(in, "p cnf")){
-                vars    = parseInt(in);
-                clauses = parseInt(in);
+	        vars    = parseInt(in, error);
+	        clauses = parseInt(in, error);
                 // SATRACE'06 hack
                 // if (clauses > 4000000)
                 //     S.eliminate(true);
             }else{
-                printf("PARSE ERROR! Unexpected char: %c\n", *in), exit(3);
+                printf("PARSE ERROR! Unexpected char: %c\n", *in), error = true;
             }
         } else if (*in == 'c' || *in == 'p')
             skipLine(in);
         else{
             cnt++;
-            readClause(in, S, lits);
+            error = !readClause(in, S, lits);
             S.addClause_(lits); }
     }
     if (strictp && cnt != clauses)
-        printf("PARSE ERROR! DIMACS header mismatch: wrong number of clauses\n");
+      printf("PARSE ERROR! DIMACS header mismatch: wrong number of clauses\n"), error = true;
+    return !error;
 }
 
 // Inserts problem into solver.
diff -ur minisat/minisat/utils/ParseUtils.h minisat/minisat/utils/ParseUtils.h
--- minisat/minisat/utils/ParseUtils.h	2012-11-19 05:50:09.000000000 -0800
+++ minisat/minisat/utils/ParseUtils.h	2013-08-13 08:39:55.193474424 -0700
@@ -87,13 +101,14 @@
 
 
 template<class B>
-static int parseInt(B& in) {
+  static int parseInt(B& in, bool& error) {
     int     val = 0;
     bool    neg = false;
     skipWhitespace(in);
     if      (*in == '-') neg = true, ++in;
     else if (*in == '+') ++in;
-    if (*in < '0' || *in > '9') fprintf(stderr, "PARSE ERROR! Unexpected char: %c\n", *in), exit(3);
+    if (*in < '0' || *in > '9') fprintf(stderr, "PARSE ERROR! Unexpected char: %c\n", *in), error = true;
+    if (error) return 0;
     while (*in >= '0' && *in <= '9')
         val = val*10 + (*in - '0'),
         ++in;
