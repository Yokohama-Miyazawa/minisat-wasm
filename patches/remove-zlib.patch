--- minisat/minisat/core/Dimacs.h	2014-08-11 14:10:14.311540356 -0700
+++ minisat/minisat/core/Dimacs.h	2014-08-11 14:15:32.613231096 -0700
@@ -81,7 +81,7 @@
 // Inserts problem into solver.
 //
 template<class Solver>
-static void parse_DIMACS(gzFile input_stream, Solver& S, bool strictp = false) {
+static void parse_DIMACS(FILE* input_stream, Solver& S, bool strictp = false) {
     StreamBuffer in(input_stream);
     parse_DIMACS_main(in, S, strictp); }
 
--- minisat/minisat/simp/Main.cc	2014-08-11 14:10:14.311540356 -0700
+++ minisat/minisat/simp/Main.cc	2014-08-11 14:16:05.485703112 -0700
@@ -19,7 +19,6 @@
 **************************************************************************************************/
 
 #include <errno.h>
-#include <zlib.h>
 
 #include "minisat/utils/System.h"
 #include "minisat/utils/ParseUtils.h"
@@ -88,7 +87,7 @@
         if (argc == 1)
             printf("Reading from standard input... Use '--help' for help.\n");
 
-        gzFile in = (argc == 1) ? gzdopen(0, "rb") : gzopen(argv[1], "rb");
+        FILE* in = (argc == 1) ? fopen(0, "rb") : fopen(argv[1], "rb");
         if (in == NULL)
             printf("ERROR! Could not open file: %s\n", argc == 1 ? "<stdin>" : argv[1]), exit(1);
         
@@ -97,7 +96,7 @@
             printf("|                                                                             |\n"); }
         
         parse_DIMACS(in, S, (bool)strictp);
-        gzclose(in);
+        fclose(in);
         FILE* res = (argc >= 3) ? fopen(argv[2], "wb") : NULL;
 
         if (S.verbosity > 0){
--- minisat/minisat/utils/ParseUtils.h	2014-08-11 14:10:14.311540356 -0700
+++ minisat/minisat/utils/ParseUtils.h	2014-08-11 14:15:17.086972074 -0700
@@ -24,8 +24,6 @@
 #include <stdlib.h>
 #include <stdio.h>
 
-#include <zlib.h>
-
 #include "minisat/mtl/XAlloc.h"
 
 namespace Minisat {
@@ -36,7 +34,7 @@
 
 
 class StreamBuffer {
-    gzFile         in;
+    FILE*         in;
     unsigned char* buf;
     int            pos;
     int            size;
@@ -46,10 +44,10 @@
     void assureLookahead() {
         if (pos >= size) {
             pos  = 0;
-            size = gzread(in, buf, buffer_size); } }
+            size = fread(buf, sizeof(char), buffer_size, in); } }
 
 public:
-    explicit StreamBuffer(gzFile i) : in(i), pos(0), size(0){
+    explicit StreamBuffer(FILE* i) : in(i), pos(0), size(0){
         buf = (unsigned char*)xrealloc(NULL, buffer_size);
         assureLookahead();
     }
